<?xml version="1.0"?>	

<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="robot_name">
  


  <!--===== Defining all colours here =====-->
  <material name="Orange">
    <color rgba="0.5 0.2 0.0 1" />
  </material>
  <material name="Yellow">
    <color rgba="0.5 0.5 0.0 1" />
  </material>
  <material name="Red">
    <color rgba="0.5 0.0 0.0 1" />
  </material>
  <material name="Blue">
    <color rgba="0.0 0.0 0.4 1" />
  </material>
  <material name="Green">
    <color rgba="0.0 0.4 0.0 1" />
  </material>
  <material name="White">
    <color rgba="1 1 1 1" />
  </material>
  <material name="grey">
    <color rgba="0.108 0.122 0.137 1" />
  </material>

  <!--===== inertia calculator =====-->
  <xacro:macro name="box_inertia" params="m x y z">
    <inertia  ixx="${m*(y*y+z*z)/12}" ixy = "0" ixz = "0"
              iyy="${m*(x*x+z*z)/12}" iyz = "0"
              izz="${m*(x*x+z*z)/12}" /> 
  </xacro:macro>
  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
              iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
              izz="${m*r*r/2}" /> 
  </xacro:macro>
  <xacro:macro name="sphere_inertia" params="m r">
    <inertia  ixx="${2*m*r*r/5}" ixy = "0" ixz = "0"
              iyy="${2*m*r*r/5}" iyz = "0"
              izz="${2*m*r*r/5}" /> 
  </xacro:macro>
        
  <xacro:property name="chassisMass" value = "20"/>
  <xacro:property name="chassisX" value = "0.46"/>
  <xacro:property name="chassisY" value = "0.38"/>
  <xacro:property name="chassisZ" value = "0.20"/>
  <xacro:property name="wheelMass" value = "3"/>
  <xacro:property name="wheelR" value = "0.65"/>
  <xacro:property name="wheelH" value = "0.65"/>
  <xacro:property name="casterMass" value = "0.2"/>
  <xacro:property name="casterR" value = "0.025"/>
  <xacro:property name="ridarMass" value = "0.1"/>
  <xacro:property name="ridarR" value = "0.035"/>
  <xacro:property name="ridarH" value = "0.035"/>

  <!--BASE FOOTPRINT-->
  <link name="base_footprint" />

  <!--========================================== BASE LINK ==========================================-->
  <link name="base_link">
    <inertial>
      <origin xyz="0 0 0.033" rpy="0 0 0" />
      <mass value="${chassisMass}" />
      <!-- <inertia ixx="0.079945" ixy="0.00012078" ixz="0.00015606" iyy="0.068406" iyz="-0.0049053" izz="0.12343" /> -->
      <xacro:box_inertia m="${chassisMass}" x = "${chassisX}" y = "${chassisY}" z = "${chassisZ}"/>
    </inertial>
  <visual>
    <origin xyz="0 0 0.033" rpy="0 0 0" />
    <geometry>
      <mesh filename="package://robot/urdf/meshes/base.stl" scale="0.1 0.1 0.1"/>
    </geometry>
    <material name="White" />
  </visual>
  <collision>
    <origin xyz="0 0 0.033" rpy="0 0 0" />
    <geometry>
      <mesh filename="package://robot/urdf/meshes/base.stl" scale="0.1 0.1 0.1"/>
    </geometry>
  </collision>
  </link>


  <!--========================================== BASE JOINT ==========================================-->
  <joint name="base_joint" type="fixed">
    <origin xyz="0 0 0.0" rpy="0 0 0" />
    <parent link="base_footprint" />
    <child link="base_link" />
    <axis xyz="0 1 0" />
  </joint>


 




  <!--========================================== LEFT WHEEL LINK ==========================================-->
  <link name="left_wheel_link">
    <inertial>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      <mass value="${wheelMass}" />
            <!-- <inertia ixx="0.0012185" ixy="1.8059E-20" ixz="3.0427E-20" iyy="0.0012185" iyz="-4.0491E-20" izz="0.0022928" /> -->
            <xacro:cylinder_inertia m = "${wheelMass}" r = "${wheelR}" h = "${wheelH}" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://robot/urdf/meshes/wheelL.stl" scale="0.1 0.1 0.1"/>
      </geometry>
      <material name="grey" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://robot/urdf/meshes/wheelL.stl" scale="0.1 0.1 0.1"/>
      </geometry>
    </collision>
  </link>

  <!--========================================== LEFT WHEEL JOINT ==========================================-->
  <joint name="left_wheel_joint" type="continuous">
    <origin xyz="0.0 0.158075 0.065" rpy="0.0 0.0 0.0"/>
    <parent link="base_link" />
    <child link="left_wheel_link" />
    <axis xyz="0 1 0" />
    <limit  effort="100.0" velocity="100.0"/>
    <joint_properties damping = "0.0" fiction = "0.0"/>
    
  </joint>

  <!--transmission name="left_wheel_trans" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="left_wheel_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="left_wheel_joint">
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
  </transmission-->


 <!--========================================== RIGHT WHEEL LINK ==========================================-->
 <link name="right_wheel_link">
  <inertial>
    <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
    <mass value="${wheelMass}" />
    <!-- <inertia ixx="0.0012185" ixy="1.8059E-20" ixz="3.0427E-20" iyy="0.0012185" iyz="-4.0491E-20" izz="0.0022928" /> -->
    <xacro:cylinder_inertia m = "${wheelMass}" r = "${wheelR}" h = "${wheelH}" />
  </inertial>
  <visual>
    <origin xyz="0 0 0" rpy="0 0 0" />
    <geometry>
      <mesh filename="package://robot/urdf/meshes/wheelR.stl" scale="0.1 0.1 0.1"/>
    </geometry>
    <material name="grey" />
  </visual>
  <collision>
    <origin xyz="0 0 0" rpy="0 0 0" />
    <geometry>
      <mesh filename="package://robot/urdf/meshes/wheelR.stl" scale="0.1 0.1 0.1"/>
    </geometry>
    <!-- <surface>
      <friction>
        <ode>
          <mu>0.8</mu>
          <mu2>0.8</mu2>
          <slip1>0.0</slip1>
          <slip2>0.0</slip2>
        </ode>
      </friction>
    </surface> -->
  </collision>
</link>
<!-- <gazebo reference="right_wheel_link">
  <mu1 value="0.8"/>
  <mu2 value="0.8"/>
  <slip value="0.0"/>
</gazebo> -->
<!--========================================== RIGHT WHEEL JOINT ==========================================-->
<joint name="right_wheel_joint" type="continuous">
  <origin xyz="0.0 -0.158075 0.065" rpy="0 0.0 0.0"/>
  <parent link="base_link" />
  <child link="right_wheel_link" />
  <axis xyz="0 1 0" />
  <limit  effort="100.0" velocity="100.0"/>
  <joint_properties damping = "0.0" fiction = "0.0"/>
</joint>

<!--transmission name="right_wheel_trans" type="SimpleTransmission">
  <type>transmission_interface/SimpleTransmission</type>
  <actuator name="right_wheel_motor">
    <mechanicalReduction>1</mechanicalReduction>
  </actuator>
  <joint name="right_wheel_joint">
    <hardwareInterface>VelocityJointInterface</hardwareInterface>
  </joint>
</transmission-->

  <!--=============================================== FRONT CASTOR WHEEL LINK ===============================================-->
  <link name="front_castor_wheel_link">
    <inertial>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      <mass value="${casterMass}" />
      <!-- <inertia ixx="0.0012185" ixy="1.8059E-20" ixz="3.0427E-20" iyy="0.0012185" iyz="-4.0491E-20" izz="0.0022928" /> -->
      <xacro:sphere_inertia m = "${casterMass}" r = "${casterR}" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <sphere radius="0.025" />
      </geometry>
      <material name="grey" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <sphere radius="0.025" />
      </geometry>
      <surface>
				<friction>
					<ode>
						<mu>0.001</mu>
						<mu2>0.001</mu2>
						<slip1>1.0</slip1>
						<slip2>1.0</slip2>
					</ode>
				</friction>
			</surface>
    </collision>
  </link>
  <gazebo reference="front_castor_wheel_link">
    <material>Gazebo/White</material>
    <mu1 value="0.001"/>
    <mu2 value="0.001"/>
</gazebo>

  <!--============================================ FRONT CASTOR WHEEL JOINT ============================================-->
  <joint name="front_castor_wheel_joint" type="fixed">
    <origin xyz="0.2 0.0 0.027" rpy="0.0 0.0 0.0"/>
    <parent link="base_link" />
    <child link="front_castor_wheel_link" />
    <axis xyz="0 0 0" />
  </joint>


  <!--=============================================== REAR CASTOR WHEEL LINK ===============================================-->
  <link name="rear_castor_wheel_link">
    <inertial>
      <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
      <mass value="${casterMass}" />
      <!-- <inertia ixx="0.0012185" ixy="1.8059E-20" ixz="3.0427E-20" iyy="0.0012185" iyz="-4.0491E-20" izz="0.0022928" /> -->
      <xacro:sphere_inertia m = "${casterMass}" r = "${casterR}" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <sphere radius="0.025" />
      </geometry>
      <material name="grey" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <sphere radius="0.025" />
      </geometry>
      <surface>
				<friction>
					<ode>
						<mu>0.001</mu>
						<mu2>0.001</mu2>
						<slip1>1.0</slip1>
						<slip2>1.0</slip2>
					</ode>
				</friction>
			</surface>
    </collision>
  </link>

  <gazebo reference="rear_castor_wheel_link">
    <material>Gazebo/White</material>
    <mu1 value="0.001"/>
    <mu2 value="0.001"/>
</gazebo>

  <!--============================================ REAR CASTOR WHEEL JOINT ============================================-->
  <joint name="rear_castor_wheel_joint" type="fixed">
    <origin xyz="-0.2 0.0 0.027" rpy="0.0 0.0 0.0"/>
    <parent link="base_link" />
    <child link="rear_castor_wheel_link" />
    <axis xyz="0 0 0" />
  </joint>


  <!--========================================== LASER LINK ==========================================-->
  <link name="laser_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="${ridarMass}" />
      <!-- <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0" />  -->
      <xacro:cylinder_inertia m = "${ridarMass}" r = "${ridarR}" h = "${ridarH}" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://robot/urdf/meshes/ridar.stl" scale="0.1 0.1 0.1"/>
      </geometry>
      <material name="Red" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://robot/urdf/meshes/ridar.stl" scale="0.1 0.1 0.1"/>
      </geometry>
    </collision>
  </link>



  <!--========================================== LASER JOINT ==========================================-->
  <joint name="laser_joint" type="fixed">
    <origin xyz="0.125 0.0 0.2" rpy="0.0 0.0 0"/>
    <parent link="base_link" />
    <child link="laser_link" />
    <axis xyz="0 0 0" />
  </joint>

  <!--========================================== LIDAR PLUGIN - GAZEBO ==========================================-->
  <!--Sample size of 4000 (original value of RPLidarA1M8) gives an error-->
  <gazebo reference="laser_link">
    <!--sensor type="gpu_ray" name="laser"-->
    <sensor type="ray" name="laser">
        <pose>0 0 0 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>40</update_rate>
        <ray>
            <scan>
                <horizontal>
                    <samples>720</samples>
                    <resolution>1</resolution>
                    <min_angle>0</min_angle>
                    <max_angle>6.28</max_angle>
                </horizontal>
            </scan>
            <range>
                <min>0.1</min>
                <max>6</max>
                <resolution>0.1</resolution>
            </range>
        </ray>
        <!--plugin name="gpu_laser" filename="libgazebo_ros_gpu_laser.so"-->
        <plugin name="gpu_laser" filename="libgazebo_ros_laser.so">
            <topicName>/scan</topicName>
            <frameName>laser_link</frameName>
        </plugin>
    </sensor>
</gazebo>


      <!--========================================== IMU LINK ==========================================-->
      <link name="imu_link">
        <inertial>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <mass value="0.0093378" />
          <inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0" /> 
        </inertial>
        <visual>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>
            <box size="0.05 0.01 0.02"/>
          </geometry>
          <material name="Red" />
        </visual>
        <collision>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>
            <box size="0.05 0.01 0.02"/>
          </geometry>
        </collision>
      </link>
    
      <!--========================================== IMU JOINT ==========================================-->
      <joint name="imu_joint" type="fixed">
        <origin xyz="0.0075 0.0 0.25" rpy="0 0 3.14" />
        <parent link="base_link" />
        <child link="imu_link" />
        <axis xyz="0 0 0" />
      </joint>
      
  <!--============================================= IMU PLUGIN - GAZEBO =============================================-->
  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu_data</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>10.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>
  <!--========================================== GAZEBO TAGS ==========================================-->
  <!-- <gazebo reference="base_link">
    <material>Gazebo/Blue</material>
  </gazebo> -->
  
  <!-- <gazebo reference="robot_body_link">
    <material>Gazebo/Orange</material>
  </gazebo> -->

  <!-- <gazebo reference="right_wheel_link">
    <material>Gazebo/Red</material>
  </gazebo> -->

  <!-- <gazebo reference="left_wheel_link">
    <material>Gazebo/Red</material>
  </gazebo> -->

  <!-- <gazebo reference="front_castor_wheel_link">
    <material>Gazebo/Red</material>
  </gazebo> -->
  
  <!-- <gazebo reference="rear_castor_wheel_link">
    <material>Gazebo/Red</material>
  </gazebo> -->

  <!-- <gazebo reference="laser_link">
    <material>Gazebo/Green</material>
  </gazebo> -->


  <!--========================================== DIFF DRIVE PLUGIN - GAZEBO ==========================================-->

	<gazebo>
	  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
		<!-- Plugin update rate in Hz -->
		<updateRate>10</updateRate>
		<!-- Name of left joint, defaults to `left_joint` -->
		<leftJoint>left_wheel_joint</leftJoint>
		<!-- Name of right joint, defaults to `right_joint` -->
		<rightJoint>right_wheel_joint</rightJoint>
		<!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
		<wheelSeparation>0.31615</wheelSeparation>
		<!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
		<wheelDiameter>0.13</wheelDiameter>
		<!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
		<wheelAcceleration>0.8</wheelAcceleration>
		<!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
		<wheelTorque>20</wheelTorque>
		<!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
		<commandTopic>cmd_vel</commandTopic>
		<!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
		<odometryTopic>odom</odometryTopic>
		<!-- Odometry frame, defaults to `odom` -->
		<odometryFrame>odom</odometryFrame>
		<!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
		<robotBaseFrame>base_footprint</robotBaseFrame>
		<!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
		<odometrySource>1</odometrySource>
		<!-- Set to true to publish transforms for the wheel links, defaults to false -->
		<publishWheelTF>true</publishWheelTF>
		<!-- Set to true to publish transforms for the odometry, defaults to true -->
		<publishOdom>true</publishOdom>
		<!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
		<publishWheelJointState>false</publishWheelJointState>
		<!-- Set to true to swap right and left wheels, defaults to true -->
		<legacyMode>false</legacyMode>
	  </plugin>
	</gazebo>



  



  <!--========================================== JOINT STATE PUBLISHER PLUGIN - GAZEBO ==========================================-->
     <!-- <gazebo>
        <plugin name="joint_state_publisher"
                filename="libgazebo_ros_joint_state_publisher.so">
            <jointName>left_wheel_joint, right_wheel_joint</jointName>
        </plugin>
    </gazebo> -->


</robot>
